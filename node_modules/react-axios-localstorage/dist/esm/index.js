import r from"axios";import{useState as o,useEffect as a}from"react";const t=(r,o,a)=>{if(!r)return;const t=`${a.prefix}_${r}`,e=((r,o,a)=>{const t=localStorage.getItem(r);if(t)try{const r=JSON.parse(t);if(!r)return;if(o&&r.invalidator!==o)return;if(r.invalidation<Date.now())return;if(a&&r.version!==a)return;return r}catch(o){return void console.error(`Invalid cache value for key ${r}`)}})(t,a?.invalidator,a?.version);if(e)return e[o];localStorage.removeItem(t)},e={bypass:!1,prefix:"ral",version:process.env.GITHUB_ACTIONS&&process.env.GITHUB_SHA,invalidationMS:3e5},i=(i,n,s,l)=>{const[c,d]=o({data:void 0,error:void 0,loading:!0});return a((()=>{const o=new URL(n),a=o.pathname,c=[];o.searchParams.forEach((r=>{c.push(r)}));const v={...e,...s,invalidator:[...c,s?.invalidator].join("_")},f=new AbortController,g=!v.bypass&&t(i,a,v);if(!g)return(async()=>{try{const o=await r.get(n,{...l,signal:f.signal});d({data:o.data,error:void 0,loading:!1}),!v.bypass&&((r,o,a,t)=>{if(!r)return;const e=`${t.prefix||"rx"}_${r}`;let i={invalidation:Date.now()+t.invalidationMS};t.invalidator&&(i.invalidator=t.invalidator),t.version&&(i.version=t.version),i[o]=a;const n=localStorage.getItem(e);if(n){const r=JSON.parse(n);r[o]=a,i={...i,...r}}localStorage.setItem(e,JSON.stringify(i))})(i,a,o.data,v)}catch(o){r.isAxiosError(o)?console.error(o.toJSON()):console.error({error:o}),d({data:void 0,error:o,loading:!1})}})(),()=>f.abort();d({data:g,error:void 0,loading:!1})}),[n]),c},n=r=>{for(const o in localStorage)o.startsWith(r||e.prefix)&&localStorage.removeItem(o)};export{i as default,e as defaultConfig,n as invalidateCache,i as useAxiosCache};
//# sourceMappingURL=index.js.map
